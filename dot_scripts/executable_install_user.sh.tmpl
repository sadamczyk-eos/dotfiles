#!/bin/sh
# Non-root user installs

{{ if (or (eq .osid "linux-fedora") (eq .osid "linux-nobara")) -}}
# Flatpak
flatpak remote-add --if-not-exists --user flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak update --noninteractive -y
flatpak install --noninteractive -y --system flathub \
  com.brave.Browser \
  com.discordapp.Discord \
  md.obsidian.Obsidian
flatpak uninstall --unused --noninteractive -y

# GNOME settings & extensions
gsettings set org.gnome.desktop.input-sources xkb-options "['caps:backspace']" # Set Capslock as Escape
gsettings set org.gnome.mutter.wayland.keybindings restore-shortcuts [] \
  && gsettings set org.gnome.desktop.wm.keybindings close "['<Super>Escape']" # Close window (removes conflicting shortcut)
gsettings set org.gnome.settings-daemon.plugins.media-keys home "['<Super>e']" # Open file explorer
gsettings set org.gnome.desktop.wm.keybindings switch-group [] \
  && gsettings set org.gnome.desktop.wm.keybindings cycle-group "['<Alt>grave']" # Switch between windows of an app directly

# Get rid of workspaces. I don't use them. Also free up the used shortcuts.
gsettings set org.gnome.mutter dynamic-workspaces false
gsettings set org.gnome.desktop.wm.preferences num-workspaces 1
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-up "[]"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-down "[]"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-left "[]"
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-right "[]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-up "[]"
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down "[]"

gsettings set org.gnome.desktop.interface enable-hot-corners false
gsettings set org.gnome.mutter edge-tiling true
gsettings set org.gnome.desktop.interface show-battery-percentage true
gsettings set org.gnome.desktop.peripherals.mouse accel-profile flat # Disable mouse acceleration
gsettings set org.gnome.desktop.peripherals.mouse natural-scroll false # Disable natural scrolling for mice
gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true # Tap touchpad to click
gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll false # Disable natural scrolling for touchpad
gsettings set org.gnome.settings-daemon.plugins.color night-light-enabled true # Enable Night Light
gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-timeout 7200 # Automatic Suspend on AC power after 2h
gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-timeout 1800 # Automatic Suspend on battery power after 30m
gsettings set org.gnome.desktop.session idle-delay 900 # Turn screen blank after 15m
gsettings set org.gnome.settings-daemon.plugins.power idle-dim false # Disable screen dimming because it happens way too quickly (30s), which seemingly can't be changed
gsettings set org.gnome.desktop.screensaver lock-delay 30 # Lock screen 30s after going blank
gsettings set org.gnome.desktop.privacy recent-files-max-age 30 # Only remember recently used files for 30 days
gsettings set org.gnome.desktop.privacy remove-old-trash-files true # Automatically delete trash
gsettings set org.gnome.desktop.privacy remove-old-temp-files true # Automatically delete temp files
gsettings set org.gnome.desktop.sound allow-volume-above-100-percent true # Allow volume to be set higher than 100% (Especially needed on crappy laptop speakers)
{{ end -}}

{{ if .sudo -}}
# Install brew packages
brew bundle --file={{- printf "%s/" .chezmoi.config.destDir -}}.config/brewfile/Brewfile

# Packages installed via brew's pip, npm (etc?) end up available under the linuxbrew home
# making them available to all users that way
{{ end -}}

# pipx is installed via rpm because gext requires certain GNOME packages
# Install gita via brew once resolved: https://github.com/nosarthur/gita/issues/80
pipx upgrade --install gita
{{ if (or (eq .osid "linux-fedora") (eq .osid "linux-nobara")) -}}
pipx upgrade --install --system-site-packages gnome-extensions-cli
{{ end -}}

# Install fisher, then run update
fish -c 'type -q fisher >/dev/null || begin; curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source; end; fisher update'

# Global composer installs
composer global require \
  balbuf/composer-git-merge-driver

# Custom installs
## phpactor https://phpactor.readthedocs.io/en/master/usage/standalone.html
curl -Lo ~/.local/bin/phpactor https://github.com/phpactor/phpactor/releases/latest/download/phpactor.phar && chmod a+x ~/.local/bin/phpactor

# Interactive / manual commands at the end
# The prompt for the installation of the GNOME extensions times out quite quickly,
# so run gcloud init (or read) first instead, since it also requires confirmation, but doesn't timeout.
# Gives some time to come back to the machine after all the long previous installation steps
{{ if .work -}}
test -d ~/.config/gcloud/ || gcloud init
{{- else -}}
read -p "Almost done! Press the ANY key to continue... :-)" -n 1 -s
{{- end }}

# Setup gh-cli
gh auth status >/dev/null || gh auth login
gh extension install --force \
  dlvhdr/gh-dash

{{ if (or (eq .osid "linux-fedora") (eq .osid "linux-nobara")) -}}
gext --dbus update --install -y \
  another-window-session-manager@gmail.com \
  appindicatorsupport@rgcjonas.gmail.com \
  clipboard-indicator@tudmotu.com \
  focused-window-dbus@flexagoon.com \
  hotedge@jonathan.jdoda.ca \
  nightthemeswitcher@romainvigier.fr \
  && {
    gsettings --schemadir ~/.local/share/gnome-shell/extensions/nightthemeswitcher@romainvigier.fr/schemas/ set org.gnome.shell.extensions.nightthemeswitcher.commands sunrise "~/.scripts/sunrise.sh";
    gsettings --schemadir ~/.local/share/gnome-shell/extensions/nightthemeswitcher@romainvigier.fr/schemas/ set org.gnome.shell.extensions.nightthemeswitcher.commands sunset "~/.scripts/sunset.sh";
    gsettings --schemadir ~/.local/share/gnome-shell/extensions/nightthemeswitcher@romainvigier.fr/schemas/ set org.gnome.shell.extensions.nightthemeswitcher.commands enabled true;
  }

{{ if .work -}}
# Programs that need to be installed manually
flatpak list | grep -q 'com.slack.Slack' >/dev/null || {
  flatpak install --user -y com.slack.Slack
  google-chrome https://www.jetbrains.com/de-de/phpstorm/download/#section=linux 2>/dev/null &
  sleep 5 # Give browser a moment to open
}
{{- end }}
{{ end -}}

